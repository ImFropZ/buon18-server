#!/bin/bash
set -e

psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
    -- Create Type
    DO \$\$ BEGIN
    CREATE TYPE setting_user_typ AS ENUM('user', 'bot');
    EXCEPTION
    WHEN duplicate_object THEN null;
    END \$\$;

    DO \$\$ BEGIN
    CREATE TYPE setting_gender_typ AS ENUM('m', 'f', 'u');
    EXCEPTION
    WHEN duplicate_object THEN null;
    END \$\$;

    DO \$\$ BEGIN
    CREATE TYPE sales_quotation_status_typ AS ENUM('quotation', 'quotation_sent', 'sales_order', 'cancelled');
    EXCEPTION
    WHEN duplicate_object THEN null;
    END \$\$;

    DO \$\$ BEGIN
    CREATE TYPE accounting_journal_entry_status_typ AS ENUM('draft', 'posted', 'cancelled');
    EXCEPTION
    WHEN duplicate_object THEN null;
    END \$\$;

    DO \$\$ BEGIN
    CREATE TYPE accounting_journal_typ AS ENUM('sales', 'purchase', 'cash', 'bank', 'general');
    EXCEPTION
    WHEN duplicate_object THEN null;
    END \$\$;

    DO \$\$ BEGIN
    CREATE TYPE accounting_account_typ AS ENUM('asset_current', 'asset_non_current', 'liability_current', 'liability_non_current', 'equity', 'income', 'expense', 'gain', 'loss');
    EXCEPTION
    WHEN duplicate_object THEN null;
    END \$\$;

    -- Create Table
    CREATE TABLE IF NOT EXISTS
        "setting.role" (
            id BIGINT GENERATED BY DEFAULT AS IDENTITY (
                START
                WITH
                    1000
            ) PRIMARY KEY,
            name VARCHAR(64) NOT NULL,
            description VARCHAR(256) NOT NULL,
            -- Timestamps
            cid BIGINT NOT NULL,
            ctime TIMESTAMP WITH TIME ZONE NOT NULL,
            mid BIGINT NOT NULL,
            mtime TIMESTAMP WITH TIME ZONE NOT NULL
        );

    CREATE TABLE IF NOT EXISTS
        "setting.permission" (
            id BIGINT GENERATED BY DEFAULT AS IDENTITY (
                START
                WITH
                    1000
            ) PRIMARY KEY,
            name VARCHAR(64) NOT NULL UNIQUE,
            -- Timestamps
            cid BIGINT NOT NULL,
            ctime TIMESTAMP WITH TIME ZONE NOT NULL,
            mid BIGINT NOT NULL,
            mtime TIMESTAMP WITH TIME ZONE NOT NULL
        );

    CREATE TABLE IF NOT EXISTS
        "setting.role_permission" (
            setting_role_id BIGINT NOT NULL,
            setting_permission_id BIGINT NOT NULL,
            -- Timestamps
            cid BIGINT NOT NULL,
            ctime TIMESTAMP WITH TIME ZONE NOT NULL,
            mid BIGINT NOT NULL,
            mtime TIMESTAMP WITH TIME ZONE NOT NULL,
            PRIMARY KEY (setting_role_id, setting_permission_id),
            CONSTRAINT "setting.role_id_fkey" FOREIGN KEY (setting_role_id) REFERENCES "setting.role" (id) ON DELETE RESTRICT,
            CONSTRAINT "setting.permission_id_fkey" FOREIGN KEY (setting_permission_id) REFERENCES "setting.permission" (id) ON DELETE RESTRICT
        );

    CREATE TABLE IF NOT EXISTS
        "setting.user" (
            id BIGINT GENERATED BY DEFAULT AS IDENTITY (
                START
                WITH
                    1000
            ) PRIMARY KEY,
            name VARCHAR(64) NOT NULL,
            email VARCHAR(64) NOT NULL UNIQUE,
            pwd VARCHAR(256),
            typ setting_user_typ NOT NULL DEFAULT 'user',
            setting_role_id BIGINT,
            -- Timestamps
            cid BIGINT NOT NULL,
            ctime TIMESTAMP WITH TIME ZONE NOT NULL,
            mid BIGINT NOT NULL,
            mtime TIMESTAMP WITH TIME ZONE NOT NULL,
            CONSTRAINT "setting.role_id_fkey" FOREIGN KEY (setting_role_id) REFERENCES "setting.role" (id) ON DELETE RESTRICT
        );

    CREATE TABLE IF NOT EXISTS
        "setting.customer" (
            id BIGINT GENERATED BY DEFAULT AS IDENTITY (
                START
                WITH
                    1000
            ) PRIMARY KEY,
            fullname VARCHAR(64) NOT NULL,
            gender setting_gender_typ NOT NULL DEFAULT 'u',
            email VARCHAR(64) NOT NULL UNIQUE,
            phone VARCHAR(16) NOT NULL,
            additional_information JSON NOT NULL DEFAULT '{}',
            -- Timestamps
            cid BIGINT NOT NULL,
            ctime TIMESTAMP WITH TIME ZONE NOT NULL,
            mid BIGINT NOT NULL,
            mtime TIMESTAMP WITH TIME ZONE NOT NULL
        );

    CREATE TABLE IF NOT EXISTS
        "sales.quotation" (
            id BIGINT GENERATED BY DEFAULT AS IDENTITY (
                START
                WITH
                    1000
            ) PRIMARY KEY,
            name VARCHAR(64) NOT NULL UNIQUE, -- Quotation Number
            creation_date TIMESTAMP WITH TIME ZONE NOT NULL,
            validity_date TIMESTAMP WITH TIME ZONE NOT NULL,
            discount DECIMAL(19, 4) NOT NULL DEFAULT 0,
            amount_delivery DECIMAL(19, 4) NOT NULL DEFAULT 0,
            status sales_quotation_status_typ NOT NULL DEFAULT 'quotation',
            setting_customer_id BIGINT NOT NULL,
            -- Timestamps
            cid BIGINT NOT NULL,
            ctime TIMESTAMP WITH TIME ZONE NOT NULL,
            mid BIGINT NOT NULL,
            mtime TIMESTAMP WITH TIME ZONE NOT NULL,
            CONSTRAINT "setting.customer_id_fkey" FOREIGN KEY (setting_customer_id) REFERENCES "setting.customer" (id) ON DELETE RESTRICT,
            CONSTRAINT "sales.quotation_date_chk" CHECK (creation_date < validity_date)
        );

    CREATE TABLE IF NOT EXISTS
        "sales.order_item" (
            id BIGINT GENERATED BY DEFAULT AS IDENTITY (
                START
                WITH
                    1000
            ) PRIMARY KEY,
            name VARCHAR(64) NOT NULL,
            description VARCHAR(256) NOT NULL,
            price DECIMAL(19, 4) NOT NULL,
            discount DECIMAL(19, 4) NOT NULL DEFAULT 0,
            sales_quotation_id BIGINT NOT NULL,
            -- Timestamps
            cid BIGINT NOT NULL,
            ctime TIMESTAMP WITH TIME ZONE NOT NULL,
            mid BIGINT NOT NULL,
            mtime TIMESTAMP WITH TIME ZONE NOT NULL,
            CONSTRAINT "sales.quotation_id_fkey" FOREIGN KEY (sales_quotation_id) REFERENCES "sales.quotation" (id) ON DELETE RESTRICT
        );

    CREATE TABLE IF NOT EXISTS
        "accounting.payment_term" (
            id BIGINT GENERATED BY DEFAULT AS IDENTITY (
                START
                WITH
                    1000
            ) PRIMARY KEY,
            name VARCHAR(64) NOT NULL UNIQUE,
            description VARCHAR(256) NOT NULL,
            -- Timestamps
            cid BIGINT NOT NULL,
            ctime TIMESTAMP WITH TIME ZONE NOT NULL,
            mid BIGINT NOT NULL,
            mtime TIMESTAMP WITH TIME ZONE NOT NULL
        );

    CREATE TABLE IF NOT EXISTS
        "accounting.payment_term_line" (
            id BIGINT GENERATED BY DEFAULT AS IDENTITY (
                START
                WITH
                    1000
            ) PRIMARY KEY,
            sequence INT NOT NULL DEFAULT 0,
            value_amount_percent DECIMAL(5, 2) NOT NULL DEFAULT 100,
            number_of_days INT NOT NULL DEFAULT 0,
            accounting_payment_term_id BIGINT NOT NULL,
            -- Timestamps
            cid BIGINT NOT NULL,
            ctime TIMESTAMP WITH TIME ZONE NOT NULL,
            mid BIGINT NOT NULL,
            mtime TIMESTAMP WITH TIME ZONE NOT NULL,
            CONSTRAINT "accounting.payment_term_id_fkey" FOREIGN KEY (accounting_payment_term_id) REFERENCES "accounting.payment_term" (id) ON DELETE RESTRICT
        );

    CREATE TABLE IF NOT EXISTS
        "sales.order" (
            id BIGINT GENERATED BY DEFAULT AS IDENTITY (
                START
                WITH
                    1000
            ) PRIMARY KEY,
            name VARCHAR(64) NOT NULL UNIQUE, -- Sales Order Number
            commitment_date TIMESTAMP WITH TIME ZONE NOT NULL,
            note TEXT NOT NULL DEFAULT '',
            sales_quotation_id BIGINT NOT NULL,
            accounting_payment_term_id BIGINT NOT NULL,
            -- Timestamps
            cid BIGINT NOT NULL,
            ctime TIMESTAMP WITH TIME ZONE NOT NULL,
            mid BIGINT NOT NULL,
            mtime TIMESTAMP WITH TIME ZONE NOT NULL,
            CONSTRAINT "sales.quotation_id_fkey" FOREIGN KEY (sales_quotation_id) REFERENCES "sales.quotation" (id) ON DELETE RESTRICT,
            CONSTRAINT "accounting.payment_term_id_fkey" FOREIGN KEY (accounting_payment_term_id) REFERENCES "accounting.payment_term" (id) ON DELETE RESTRICT
        );

    CREATE TABLE IF NOT EXISTS
        "accounting.account" (
            id BIGINT GENERATED BY DEFAULT AS IDENTITY (
                START
                WITH
                    1000
            ) PRIMARY KEY,
            code VARCHAR(16) NOT NULL UNIQUE,
            name VARCHAR(64) NOT NULL,
            typ accounting_account_typ NOT NULL,
            -- Timestamps
            cid BIGINT NOT NULL,
            ctime TIMESTAMP WITH TIME ZONE NOT NULL,
            mid BIGINT NOT NULL,
            mtime TIMESTAMP WITH TIME ZONE NOT NULL
        );

    CREATE TABLE IF NOT EXISTS
        "accounting.journal" (
            id BIGINT GENERATED BY DEFAULT AS IDENTITY (
                START
                WITH
                    1000
            ) PRIMARY KEY,
            code VARCHAR(16) NOT NULL UNIQUE,
            name VARCHAR(64) NOT NULL,
            typ accounting_journal_typ NOT NULL,
            accounting_account_id BIGINT NOT NULL,
            -- Timestamps
            cid BIGINT NOT NULL,
            ctime TIMESTAMP WITH TIME ZONE NOT NULL,
            mid BIGINT NOT NULL,
            mtime TIMESTAMP WITH TIME ZONE NOT NULL,
            CONSTRAINT "accounting.account_id_fkey" FOREIGN KEY (accounting_account_id) REFERENCES "accounting.account" (id) ON DELETE RESTRICT
        );

    CREATE TABLE IF NOT EXISTS
        "accounting.journal_entry" (
            id BIGINT GENERATED BY DEFAULT AS IDENTITY (
                START
                WITH
                    1000
            ) PRIMARY KEY,
            name VARCHAR(64) NOT NULL UNIQUE, -- Journal Entry Number
            date TIMESTAMP WITH TIME ZONE NOT NULL,
            note TEXT NOT NULL DEFAULT '',
            status accounting_journal_entry_status_typ NOT NULL DEFAULT 'draft',
            accounting_journal_id BIGINT NOT NULL,
            -- Timestamps
            cid BIGINT NOT NULL,
            ctime TIMESTAMP WITH TIME ZONE NOT NULL,
            mid BIGINT NOT NULL,
            mtime TIMESTAMP WITH TIME ZONE NOT NULL,
            CONSTRAINT "accounting.journal_id_fkey" FOREIGN KEY (accounting_journal_id) REFERENCES "accounting.journal" (id) ON DELETE RESTRICT
        );

    CREATE TABLE IF NOT EXISTS
        "accounting.journal_entry_line" (
            id BIGINT GENERATED BY DEFAULT AS IDENTITY (
                START
                WITH
                    1000
            ) PRIMARY KEY,
            sequence INT NOT NULL DEFAULT 0,
            name VARCHAR(64) NOT NULL,
            amount_debit DECIMAL(19, 4) NOT NULL DEFAULT 0,
            amount_credit DECIMAL(19, 4) NOT NULL DEFAULT 0,
            accounting_journal_entry_id BIGINT NOT NULL,
            accounting_account_id BIGINT NOT NULL,
            -- Timestamps
            cid BIGINT NOT NULL,
            ctime TIMESTAMP WITH TIME ZONE NOT NULL,
            mid BIGINT NOT NULL,
            mtime TIMESTAMP WITH TIME ZONE NOT NULL,
            CONSTRAINT "accounting.journal_entry_id_fkey" FOREIGN KEY (accounting_journal_entry_id) REFERENCES "accounting.journal_entry" (id) ON DELETE RESTRICT,
            CONSTRAINT "accounting.account_id_fkey" FOREIGN KEY (accounting_account_id) REFERENCES "accounting.account" (id) ON DELETE RESTRICT,
            CONSTRAINT "accounting.journal_entry_line_amount_chk" CHECK (
                amount_debit > 0
                OR amount_credit > 0
            )
        );
EOSQL