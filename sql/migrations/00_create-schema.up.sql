CREATE TYPE user_typ AS ENUM ('User', 'Sys');

CREATE TYPE user_role AS ENUM ('Admin', 'Editor', 'User');

-- M = Male
-- F = Female
-- U = Unknown
CREATE TYPE gender_typ AS ENUM ('M', 'F', 'U');

CREATE TYPE quote_status_typ AS ENUM ('Draft', 'Sent', 'Accept', 'Reject');

CREATE TABLE "user" (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,
    -- Personal information
    name VARCHAR(64) NOT NULL,
    email VARCHAR(64) NOT NULL UNIQUE,
    -- Auth
    pwd VARCHAR(256),
    -- Flags
    typ user_typ NOT NULL DEFAULT 'User',
    role user_role NOT NULL DEFAULT 'User',
    deleted BOOLEAN NOT NULL DEFAULT FALSE,
    -- Timestamps
    cid bigint NOT NULL,
    ctime timestamp with time zone NOT NULL,
    mid bigint NOT NULL,
    mtime timestamp with time zone NOT NULL
);

CREATE TABLE "account" (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,
    -- Personal information
    code VARCHAR(32) NOT NULL UNIQUE,
    name VARCHAR(64) NOT NULL,
    email VARCHAR(64),
    gender gender_typ NOT NULL DEFAULT 'U',
    address VARCHAR(256),
    phone VARCHAR(16) NOT NULL UNIQUE,
    secondary_phone VARCHAR(16),
    -- Flags
    deleted BOOLEAN NOT NULL DEFAULT FALSE,
    -- Foreign keys
    social_media_id BIGINT NOT NULL REFERENCES social_media(id) ON DELETE CASCADE ON UPDATE CASCADE,
    -- Timestamps
    cid bigint NOT NULL,
    ctime timestamp with time zone NOT NULL,
    mid bigint NOT NULL,
    mtime timestamp with time zone NOT NULL
);

CREATE TABLE "social_media" (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY
);

CREATE TABLE "social_media_data" (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,
    -- Foreign keys
    social_media_id BIGINT NOT NULL REFERENCES social_media(id) ON DELETE CASCADE ON UPDATE CASCADE,
    -- Social media information
    platform VARCHAR(25) NOT NULL,
    -- will store in lowercase
    url VARCHAR(256) NOT NULL,
    -- Timestamps
    cid BIGINT NOT NULL,
    ctime TIMESTAMP WITH TIME ZONE NOT NULL,
    mid BIGINT NOT NULL,
    mtime TIMESTAMP WITH TIME ZONE NOT NULL
);

CREATE TABLE "client" (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,
    -- Personal information
    code VARCHAR(32) NOT NULL UNIQUE,
    name VARCHAR(64) NOT NULL,
    address VARCHAR(256),
    phone VARCHAR(16) NOT NULL UNIQUE,
    latitude DOUBLE PRECISION NOT NULL,
    longitude DOUBLE PRECISION NOT NULL,
    note TEXT,
    -- Foreign keys
    social_media_id BIGINT NOT NULL REFERENCES account(id) ON DELETE CASCADE ON UPDATE CASCADE,
    -- Timestamps
    cid bigint NOT NULL,
    ctime timestamp with time zone NOT NULL,
    mid bigint NOT NULL,
    mtime timestamp with time zone NOT NULL
);

CREATE TABLE "quote" (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,
    -- Invoice information
    code VARCHAR(32) NOT NULL UNIQUE,
    date DATE NOT NULL,
    expiry_date DATE NOT NULL,
    note TEXT,
    subtotal DOUBLE PRECISION NOT NULL,
    discount DOUBLE PRECISION NOT NULL,
    total DOUBLE PRECISION NOT NULL,
    -- Foreign keys
    client_id BIGINT NOT NULL REFERENCES client(id) ON DELETE CASCADE ON UPDATE CASCADE,
    account_id BIGINT NOT NULL REFERENCES account(id) ON DELETE CASCADE ON UPDATE CASCADE,
    -- Flags
    status quote_status_typ NOT NULL DEFAULT "Draft",
    -- Timestamps
    cid bigint NOT NULL,
    ctime timestamp with time zone NOT NULL,
    mid bigint NOT NULL,
    mtime timestamp with time zone NOT NULL
);

CREATE TABLE "quote_item" (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,
    -- Invoice item information
    name VARCHAR(64) NOT NULL,
    description TEXT,
    quantity SMALLINT NOT NULL,
    unit_price DOUBLE PRECISION NOT NULL,
    -- Foreign keys
    quote_id BIGINT NOT NULL REFERENCES quote(id) ON DELETE CASCADE ON UPDATE CASCADE,
    -- Timestamps
    cid bigint NOT NULL,
    ctime timestamp with time zone NOT NULL,
    mid bigint NOT NULL,
    mtime timestamp with time zone NOT NULL
);